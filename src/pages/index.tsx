import type { NextPage } from "next"
import Head from "next/head"
import { trpc } from "../utils/trpc"
import LoginButton from "../components/login-button"
import Link from "next/link"

type TechnologyCardProps = {
  name: string
  description: string
  documentation: string
}

const Home: NextPage = () => {
  const hello = trpc.useQuery(["example.hello", { text: "from tRPC" }])
  const getAllPosts = trpc.useQuery(["posts.getAll"])

  const posts = getAllPosts.data ?? []

  return (
    <>
      <Head>
        <title>T3 Blog</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <nav className="navbar fixed top-0 w-full gap-4 bg-base-300">
          <span className="flex-1">T3 Blog</span>

          <LoginButton />
        </nav>

        <section className="flex flex-col items-center justify-center">
          <h1 className="text-3xl">Posts</h1>

          <div className="flex flex-col justify-center gap-4 mt-8">
            {posts.map((post) => (
              <Link key={post.id} href={`/posts/${post.id}`}>
                <a className="link link-hover">
                  <h2 className="text-2xl">{post.title}</h2>
                  {post.content.length > 280 ? (
                    <p>{post.content.substring(0, 280)}...</p>
                  ) : (
                    <p>{post.content}</p>
                  )}
                  <small>
                    by {post.user.name} ({post.user.email})
                  </small>
                </a>
              </Link>
            ))}
          </div>
        </section>
      </main>
    </>
  )
}

const SecretMessage = () => {
  const secretMessage = trpc.useQuery(["question.getSecretMessage"])

  if (secretMessage.isLoading) {
    return <p>Loading the secret message...</p>
  }

  if (secretMessage.error) {
    return <p>ERROR: {secretMessage.error.message}</p>
  }

  return <p>Message loaded: {secretMessage.data}</p>
}

const TechnologyCard = ({
  name,
  description,
  documentation,
}: TechnologyCardProps) => {
  return (
    <section className="flex flex-col justify-center p-6 duration-500 border-2 border-gray-500 rounded shadow-xl motion-safe:hover:scale-105">
      <h2 className="text-lg text-gray-700">{name}</h2>
      <p className="text-sm text-gray-600">{description}</p>
      <a
        className="mt-3 text-sm underline text-violet-500 decoration-dotted underline-offset-2"
        href={documentation}
        target="_blank"
        rel="noreferrer"
      >
        Documentation
      </a>
    </section>
  )
}

export default Home
